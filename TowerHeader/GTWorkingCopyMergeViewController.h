//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <FNAppKit/FNViewController.h>

#import "GTGitMergeConflictControllerDelegate-Protocol.h"
#import "GTGitMergeToolControllerDelegate-Protocol.h"
#import "GTGitRepositoryObserving-Protocol.h"
#import "GTMergeViewDelegate-Protocol.h"
#import "GTRepositoryDiffToolActions-Protocol.h"
#import "GTRepositoryWorkingTreeActions-Protocol.h"
#import "NSMenuDelegate-Protocol.h"

@class GTGitMergeConflictController, GTGitMergeConflictState, GTGitMergeToolController, GTGitRepository, GTGitRepositoryController, GTGitRepositoryObserver, GTGitWorkingTreeEntry, GTMergeConflictVersionActionSenderValidator, GTMergeConflictVersionMenuGenerator, GTMergeView, GTMergeViewSourceItem, NSMenu, NSString;

@interface GTWorkingCopyMergeViewController : FNViewController <GTGitRepositoryObserving, GTGitMergeConflictControllerDelegate, GTGitMergeToolControllerDelegate, GTMergeViewDelegate, NSMenuDelegate, GTRepositoryWorkingTreeActions, GTRepositoryDiffToolActions>
{
    BOOL _merging;
    BOOL _needsUpdateSourceItems;
    BOOL _needsUpdateMergeView;
    GTGitRepository *_repository;
    GTGitWorkingTreeEntry *_workingTreeEntry;
    GTMergeView *_mergeView;
    GTGitRepositoryObserver *_repositoryObserver;
    GTGitMergeConflictController *_mergeConflictController;
    GTGitMergeToolController *_mergeToolController;
    GTGitRepositoryController *_repositoryController;
    GTMergeViewSourceItem *_mine;
    GTMergeViewSourceItem *_theirs;
    unsigned long long _mergeResolveMode;
    GTGitMergeConflictState *_mergeConflictState;
    GTMergeConflictVersionMenuGenerator *_myVersionMenuGenerator;
    GTMergeConflictVersionMenuGenerator *_theirVersionMenuGenerator;
    NSMenu *_myVersionMenu;
    NSMenu *_theirVersionMenu;
    GTMergeConflictVersionActionSenderValidator *_myVersionActionsValidator;
    GTMergeConflictVersionActionSenderValidator *_theirVersionActionsValidator;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GTMergeConflictVersionActionSenderValidator *theirVersionActionsValidator; // @synthesize theirVersionActionsValidator=_theirVersionActionsValidator;
@property(retain, nonatomic) GTMergeConflictVersionActionSenderValidator *myVersionActionsValidator; // @synthesize myVersionActionsValidator=_myVersionActionsValidator;
@property(retain, nonatomic) NSMenu *theirVersionMenu; // @synthesize theirVersionMenu=_theirVersionMenu;
@property(retain, nonatomic) NSMenu *myVersionMenu; // @synthesize myVersionMenu=_myVersionMenu;
@property(retain, nonatomic) GTMergeConflictVersionMenuGenerator *theirVersionMenuGenerator; // @synthesize theirVersionMenuGenerator=_theirVersionMenuGenerator;
@property(retain, nonatomic) GTMergeConflictVersionMenuGenerator *myVersionMenuGenerator; // @synthesize myVersionMenuGenerator=_myVersionMenuGenerator;
@property(nonatomic) BOOL needsUpdateMergeView; // @synthesize needsUpdateMergeView=_needsUpdateMergeView;
@property(nonatomic) BOOL needsUpdateSourceItems; // @synthesize needsUpdateSourceItems=_needsUpdateSourceItems;
@property(nonatomic, getter=isMerging) BOOL merging; // @synthesize merging=_merging;
@property(retain, nonatomic) GTGitMergeConflictState *mergeConflictState; // @synthesize mergeConflictState=_mergeConflictState;
@property(nonatomic) unsigned long long mergeResolveMode; // @synthesize mergeResolveMode=_mergeResolveMode;
@property(retain, nonatomic) GTMergeViewSourceItem *theirs; // @synthesize theirs=_theirs;
@property(retain, nonatomic) GTMergeViewSourceItem *mine; // @synthesize mine=_mine;
@property(retain, nonatomic) GTGitRepositoryController *repositoryController; // @synthesize repositoryController=_repositoryController;
@property(retain, nonatomic) GTGitMergeToolController *mergeToolController; // @synthesize mergeToolController=_mergeToolController;
@property(retain, nonatomic) GTGitMergeConflictController *mergeConflictController; // @synthesize mergeConflictController=_mergeConflictController;
@property(retain, nonatomic) GTGitRepositoryObserver *repositoryObserver; // @synthesize repositoryObserver=_repositoryObserver;
@property(nonatomic) __weak GTMergeView *mergeView; // @synthesize mergeView=_mergeView;
@property(retain, nonatomic) GTGitWorkingTreeEntry *workingTreeEntry; // @synthesize workingTreeEntry=_workingTreeEntry;
@property(readonly, nonatomic) GTGitRepository *repository; // @synthesize repository=_repository;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)compareRevisions:(id)arg1;
- (void)saveTheirVersion:(id)arg1;
- (void)saveMyVersion:(id)arg1;
- (void)openTheirVersionWithOtherApplication:(id)arg1;
- (void)openTheirVersionWithApplication:(id)arg1;
- (void)openTheirVersionWithDefaultApplication:(id)arg1;
- (void)openMyVersionWithOtherApplication:(id)arg1;
- (void)openMyVersionWithApplication:(id)arg1;
- (void)openMyVersionWithDefaultApplication:(id)arg1;
- (void)cancelResolvingUsingMergeTool;
- (void)resolveUsingMergeTool;
- (void)resolveUsingManuallyEditedVersion;
- (void)resolveUsingMergedVersion;
- (void)resolveUsingOriginalVersion;
- (void)mergeView:(id)arg1 confirmWithIndexSet:(id)arg2;
- (void)mergeView:(id)arg1 startOverWithIndexSet:(id)arg2;
- (void)mergeView:(id)arg1 cancelResolvingWithIndexSet:(id)arg2;
- (void)mergeView:(id)arg1 startResolvingWithIndexSet:(id)arg2;
- (void)mergeViewDidChangeSelection:(id)arg1;
- (void)mergeToolController:(id)arg1 didFinishMergingEntry:(id)arg2;
- (void)mergeToolController:(id)arg1 didFailMergingEntry:(id)arg2 error:(id)arg3;
- (void)mergeToolControllerDidCancel:(id)arg1;
- (void)mergeToolController:(id)arg1 didFailLaunchingMergeToolWithError:(id)arg2;
- (void)mergeConflictControllerDidFinishLoading:(id)arg1;
- (void)repositoryDidUpdateWorkingCopy:(id)arg1;
- (void)repositoryWillUpdateWorkingCopy:(id)arg1;
- (void)repositoryDidUpdateWorkingTree:(id)arg1;
- (void)updateMergeViewState;
- (void)updateMergeViewConfigurationIfNeeded;
- (void)updateMergeViewIfNeeded;
- (id)updateSourceItem:(id)arg1 withCommit:(id)arg2 titleFormat:(id)arg3;
- (id)buildMenuForTheirsSourceItem;
- (id)buildMenuForMineSourceItem;
- (void)menuNeedsUpdate:(id)arg1;
- (void)updateTheirsSourceItem;
- (void)updateMineSourceItem;
- (void)updateSourceItemsIfNeeded;
- (void)updateMergeConflictControllerIfNeeded;
- (void)updateMergeViewTitleIfNeeded;
- (void)update;
- (void)resetMergeView;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)configureMergeView;
- (void)viewDidLoad;
- (void)setMergeResolveModeToMergeTool;
- (void)setMergeResolveModeToAction;
- (void)resetMergeResolveMode;
- (void)dealloc;
- (void)commonInit;
- (id)initWithRepository:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

