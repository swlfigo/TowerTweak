//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GTGitController.h"

#import "GTGitRepositoryObserving-Protocol.h"

@class GTGitRepositoryObserver, NSString, NSTimer;
@protocol GTGitWorkingCopyProgressControllerDelegate;

@interface GTGitWorkingCopyProgressController : GTGitController <GTGitRepositoryObserving>
{
    BOOL _fired;
    id <GTGitWorkingCopyProgressControllerDelegate> _delegate;
    GTGitRepositoryObserver *_repositoryObserver;
    NSTimer *_thresholdTimer;
    NSTimer *_delayTimer;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isFired) BOOL fired; // @synthesize fired=_fired;
@property(retain, nonatomic) NSTimer *delayTimer; // @synthesize delayTimer=_delayTimer;
@property(retain, nonatomic) NSTimer *thresholdTimer; // @synthesize thresholdTimer=_thresholdTimer;
@property(retain, nonatomic) GTGitRepositoryObserver *repositoryObserver; // @synthesize repositoryObserver=_repositoryObserver;
@property(nonatomic) __weak id <GTGitWorkingCopyProgressControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)controllerDidReachDelay;
- (void)controllerDidReachThreshold;
- (void)repositoryDidUpdateWorkingCopy:(id)arg1;
- (void)repositoryWillUpdateWorkingCopy:(id)arg1;
- (void)stopObserving;
- (void)startObserving;
- (void)resetDelayTimerIfNeeded;
- (void)resetThresholdTimerIfNeeded;
@property(readonly, nonatomic, getter=isActive) BOOL active;
- (id)initWithRepository:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

