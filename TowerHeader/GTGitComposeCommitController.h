//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GTGitController.h"

@class GTBackgroundSession, GTCommitMessageDraft, GTGPGKey, GTGitCommit, GTGitCommitActionValidator, GTGitHistoryManager, NSArray, NSString;
@protocol GTGitComposeCommitControllerDelegate;

@interface GTGitComposeCommitController : GTGitController
{
    BOOL _amends;
    BOOL _signsOff;
    BOOL _loading;
    BOOL _canCommit;
    BOOL _canAmend;
    id <GTGitComposeCommitControllerDelegate> _delegate;
    long long _recommendedSubjectCharacterCount;
    NSString *_subject;
    NSString *_body;
    long long _composeMode;
    GTGitCommit *_lastCommit;
    GTGPGKey *_gpgKey;
    unsigned long long _numberOfStagedChanges;
    long long _remainingSubjectCharacterCount;
    GTGitHistoryManager *_historyManager;
    GTCommitMessageDraft *_commitMessageDraft;
    NSString *_lastAmendCommitMessage;
    NSString *_lastMergeCommitMessage;
    GTGitCommitActionValidator *_commitActionValidator;
    GTBackgroundSession *_backgroundSession;
    NSArray *_gpgKeys;
}

+ (id)keyPathsForValuesAffectingRemainingSubjectCharacterCount;
+ (id)keyPathsForValuesAffectingCommitMessageEmpty;
+ (id)keyPathsForValuesAffectingCanCommit;
+ (id)keyPathsForValuesAffectingCanAmend;
- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *gpgKeys; // @synthesize gpgKeys=_gpgKeys;
@property(retain, nonatomic) GTBackgroundSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property(retain, nonatomic) GTGitCommitActionValidator *commitActionValidator; // @synthesize commitActionValidator=_commitActionValidator;
@property(retain, nonatomic) NSString *lastMergeCommitMessage; // @synthesize lastMergeCommitMessage=_lastMergeCommitMessage;
@property(retain, nonatomic) NSString *lastAmendCommitMessage; // @synthesize lastAmendCommitMessage=_lastAmendCommitMessage;
@property(retain, nonatomic) GTCommitMessageDraft *commitMessageDraft; // @synthesize commitMessageDraft=_commitMessageDraft;
@property(retain, nonatomic) GTGitHistoryManager *historyManager; // @synthesize historyManager=_historyManager;
@property(nonatomic) long long remainingSubjectCharacterCount; // @synthesize remainingSubjectCharacterCount=_remainingSubjectCharacterCount;
@property(nonatomic) BOOL canAmend; // @synthesize canAmend=_canAmend;
@property(nonatomic) BOOL canCommit; // @synthesize canCommit=_canCommit;
@property(getter=isLoading) BOOL loading; // @synthesize loading=_loading;
@property(nonatomic) unsigned long long numberOfStagedChanges; // @synthesize numberOfStagedChanges=_numberOfStagedChanges;
@property(retain, nonatomic) GTGPGKey *gpgKey; // @synthesize gpgKey=_gpgKey;
@property(retain, nonatomic) GTGitCommit *lastCommit; // @synthesize lastCommit=_lastCommit;
@property(nonatomic) long long composeMode; // @synthesize composeMode=_composeMode;
@property(nonatomic) BOOL signsOff; // @synthesize signsOff=_signsOff;
@property(nonatomic) BOOL amends; // @synthesize amends=_amends;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(nonatomic) long long recommendedSubjectCharacterCount; // @synthesize recommendedSubjectCharacterCount=_recommendedSubjectCharacterCount;
@property(nonatomic) __weak id <GTGitComposeCommitControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;
- (id)trimmedCommitBody;
- (id)trimmedCommitSubject;
- (unsigned long long)commitOptions;
- (void)controllerDidFinishLoading;
- (void)controllerDidFailLoadingLastCommitWithError:(id)arg1 backgroundTask:(id)arg2;
- (void)controllerDidFinishLoadingLastCommit:(id)arg1 backgroundTask:(id)arg2;
- (void)controllerDidChangeCommitMessage;
- (void)controllerDidChangeToComposeMode:(long long)arg1 fromComposeMode:(long long)arg2;
- (void)controllerWillChangeToComposeMode:(long long)arg1 fromComposeMode:(long long)arg2;
- (void)changeToComposeMode:(long long)arg1;
- (void)loadDefaultCommitMessage;
- (void)restoreDraft;
- (void)clearDraft;
- (void)saveDraftIfNeeded;
- (BOOL)hasDraft;
- (void)updateMergeCommitMessageIfNeeded;
- (void)updateAmendCommitMessageIfNeeded;
- (void)update;
- (void)reset;
- (void)waitUntilLoaded;
- (void)reload;
@property(readonly, nonatomic) NSString *commitMessage;
@property(readonly, nonatomic, getter=isMatchingGPGProfile) BOOL matchingGPGProfile;
@property(readonly, nonatomic, getter=isInitialCommit) BOOL initialCommit;
@property(readonly, nonatomic, getter=isMergeComposeMode) BOOL mergeComposeMode;
@property(readonly, nonatomic, getter=isAmendComposeMode) BOOL amendComposeMode;
@property(readonly, nonatomic, getter=isDefaultComposeMode) BOOL defaultComposeMode;
@property(readonly, nonatomic, getter=isCommitMessageEmpty) BOOL commitMessageEmpty;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)unregisterObservers;
- (void)registerObservers;
- (id)initWithRepository:(id)arg1;

@end

