//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GTRepositoryBaseViewController.h"

#import "GTGPGBinaryObserving-Protocol.h"
#import "GTGitRepositoryObserving-Protocol.h"
#import "GTHistoryCommitListBaseBranchHeaderViewControllerDelegate-Protocol.h"
#import "GTHistoryItemControllerDelegate-Protocol.h"
#import "GTHistorySearchFilterContainerViewControllerDelegate-Protocol.h"
#import "GTRepositoryHistoryTouchBarControllerDelegate-Protocol.h"
#import "GTSearchControllerDelegate-Protocol.h"
#import "GTWindowObserving-Protocol.h"
#import "GTWorkspaceObserving-Protocol.h"
#import "NSMenuDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"
#import "NSTextDelegate-Protocol.h"

@class GTGPGBinaryObserver, GTHistoryCommitDayItemController, GTHistoryCommitListBaseBranchHeaderViewController, GTHistoryCommitListDraggingValidator, GTHistoryCommitListHeaderView, GTHistoryCompareBranchesValidator, GTHistoryItemController, GTHistoryItemControllerConfigurator, GTHistoryMenuGenerator, GTHistorySearchFilterContainerViewController, GTHistorySearchScopeConfiguration, GTHistoryViewConfiguration, GTHistoryViewSettingsController, GTHistoryViewSettingsMenuController, GTSearchController, GTStateManager, GTWorkspaceObserver, NSArray, NSDate, NSIndexSet, NSLayoutConstraint, NSString, NSTableView, NSTimer, NSView;
@protocol GTHistoryCommitListViewControllerDelegate;

@interface GTHistoryCommitListViewController : GTRepositoryBaseViewController <NSTextDelegate, NSTableViewDataSource, NSTableViewDelegate, NSMenuDelegate, GTGitRepositoryObserving, GTSearchControllerDelegate, GTHistoryItemControllerDelegate, GTWindowObserving, GTHistorySearchFilterContainerViewControllerDelegate, GTGPGBinaryObserving, GTWorkspaceObserving, GTHistoryCommitListBaseBranchHeaderViewControllerDelegate, GTRepositoryHistoryTouchBarControllerDelegate>
{
    BOOL _forceReloadItemControllerToggle;
    BOOL _compareBranchesButtonEnabled;
    id <GTHistoryCommitListViewControllerDelegate> _delegate;
    NSTableView *_tableView;
    GTHistoryCommitListHeaderView *_topHeader;
    NSView *_filterViewContainer;
    NSLayoutConstraint *_baseBranchInfoViewHeightConstraint;
    NSLayoutConstraint *_compareBranchesButtonWidthConstraint;
    NSView *_baseBranchInfoHeaderView;
    GTHistoryViewSettingsMenuController *_viewSettingsMenuController;
    GTHistoryCommitListBaseBranchHeaderViewController *_baseBranchInfoHeaderViewController;
    GTHistorySearchFilterContainerViewController *_filterViewController;
    GTHistoryViewSettingsController *_viewSettingsController;
    GTHistoryViewConfiguration *_viewConfiguration;
    GTHistoryMenuGenerator *_historyMenuGenerator;
    GTHistoryItemController *_itemController;
    GTHistoryItemControllerConfigurator *_itemControllerConfigurator;
    GTHistoryCommitDayItemController *_historyCommitDayItemController;
    GTSearchController *_searchController;
    GTHistorySearchScopeConfiguration *_searchScopeConfiguration;
    NSArray *_selectedCommits;
    NSIndexSet *_selectionIndexes;
    GTStateManager *_viewState;
    GTHistoryCommitListDraggingValidator *_draggingValidator;
    NSTimer *_loadingInfoDelayTimer;
    NSTimer *_loadingDisplayDurationTimer;
    NSTimer *_showResultsDelayTimer;
    NSDate *_loadingIndicatorDisplayDate;
    GTGPGBinaryObserver *_gpgBinaryObserver;
    GTWorkspaceObserver *_workspaceObserver;
    GTHistoryCompareBranchesValidator *_compareBranchesValidator;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GTHistoryCompareBranchesValidator *compareBranchesValidator; // @synthesize compareBranchesValidator=_compareBranchesValidator;
@property(retain, nonatomic) GTWorkspaceObserver *workspaceObserver; // @synthesize workspaceObserver=_workspaceObserver;
@property(retain, nonatomic) GTGPGBinaryObserver *gpgBinaryObserver; // @synthesize gpgBinaryObserver=_gpgBinaryObserver;
@property(nonatomic, getter=isCompareBranchesButtonEnabled) BOOL compareBranchesButtonEnabled; // @synthesize compareBranchesButtonEnabled=_compareBranchesButtonEnabled;
@property(nonatomic) BOOL forceReloadItemControllerToggle; // @synthesize forceReloadItemControllerToggle=_forceReloadItemControllerToggle;
@property(retain, nonatomic) NSDate *loadingIndicatorDisplayDate; // @synthesize loadingIndicatorDisplayDate=_loadingIndicatorDisplayDate;
@property(retain, nonatomic) NSTimer *showResultsDelayTimer; // @synthesize showResultsDelayTimer=_showResultsDelayTimer;
@property(retain, nonatomic) NSTimer *loadingDisplayDurationTimer; // @synthesize loadingDisplayDurationTimer=_loadingDisplayDurationTimer;
@property(retain, nonatomic) NSTimer *loadingInfoDelayTimer; // @synthesize loadingInfoDelayTimer=_loadingInfoDelayTimer;
@property(retain, nonatomic) GTHistoryCommitListDraggingValidator *draggingValidator; // @synthesize draggingValidator=_draggingValidator;
@property(retain, nonatomic) GTStateManager *viewState; // @synthesize viewState=_viewState;
@property(retain, nonatomic) NSIndexSet *selectionIndexes; // @synthesize selectionIndexes=_selectionIndexes;
@property(retain, nonatomic) NSArray *selectedCommits; // @synthesize selectedCommits=_selectedCommits;
@property(retain, nonatomic) GTHistorySearchScopeConfiguration *searchScopeConfiguration; // @synthesize searchScopeConfiguration=_searchScopeConfiguration;
@property(nonatomic) __weak GTSearchController *searchController; // @synthesize searchController=_searchController;
@property(retain, nonatomic) GTHistoryCommitDayItemController *historyCommitDayItemController; // @synthesize historyCommitDayItemController=_historyCommitDayItemController;
@property(retain, nonatomic) GTHistoryItemControllerConfigurator *itemControllerConfigurator; // @synthesize itemControllerConfigurator=_itemControllerConfigurator;
@property(retain, nonatomic) GTHistoryItemController *itemController; // @synthesize itemController=_itemController;
@property(retain, nonatomic) GTHistoryMenuGenerator *historyMenuGenerator; // @synthesize historyMenuGenerator=_historyMenuGenerator;
@property(retain, nonatomic) GTHistoryViewConfiguration *viewConfiguration; // @synthesize viewConfiguration=_viewConfiguration;
@property(retain, nonatomic) GTHistoryViewSettingsController *viewSettingsController; // @synthesize viewSettingsController=_viewSettingsController;
@property(retain, nonatomic) GTHistorySearchFilterContainerViewController *filterViewController; // @synthesize filterViewController=_filterViewController;
@property(retain, nonatomic) GTHistoryCommitListBaseBranchHeaderViewController *baseBranchInfoHeaderViewController; // @synthesize baseBranchInfoHeaderViewController=_baseBranchInfoHeaderViewController;
@property(nonatomic) __weak GTHistoryViewSettingsMenuController *viewSettingsMenuController; // @synthesize viewSettingsMenuController=_viewSettingsMenuController;
@property(nonatomic) __weak NSView *baseBranchInfoHeaderView; // @synthesize baseBranchInfoHeaderView=_baseBranchInfoHeaderView;
@property(nonatomic) __weak NSLayoutConstraint *compareBranchesButtonWidthConstraint; // @synthesize compareBranchesButtonWidthConstraint=_compareBranchesButtonWidthConstraint;
@property(nonatomic) __weak NSLayoutConstraint *baseBranchInfoViewHeightConstraint; // @synthesize baseBranchInfoViewHeightConstraint=_baseBranchInfoViewHeightConstraint;
@property(nonatomic) __weak NSView *filterViewContainer; // @synthesize filterViewContainer=_filterViewContainer;
@property(nonatomic) __weak GTHistoryCommitListHeaderView *topHeader; // @synthesize topHeader=_topHeader;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak id <GTHistoryCommitListViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)performFileSearchWithPaths:(id)arg1;
- (void)updateRefsConfiguration:(id)arg1;
- (void)disableVerifyingGPGSignaturesIfNecessary;
- (Class)cellClassForTableStyle;
- (void)menuNeedsUpdate:(id)arg1;
- (void)rebaseOnto:(id)arg1;
- (void)toggleComparesBranches:(id)arg1;
- (void)scrollToRevision:(id)arg1;
- (void)doubleClick:(id)arg1;
- (void)restoreSelectedCommits;
- (void)restoreScrollPosition;
- (void)restoreTableViewState;
- (void)reloadTable;
- (void)reloadData;
- (void)updateViewSettings;
- (void)updateItemController;
- (void)updateWindowTitle;
- (void)updateTableView;
- (void)updateHeaderView;
- (void)updateViewSettingsMenuController;
- (BOOL)needsUpdateItemController;
- (BOOL)needsUpdateWindowTitle;
- (BOOL)needsUpdateTableView;
- (BOOL)needsUpdateHeaderView;
- (BOOL)needsUpdateViewSettingsMenuController;
- (void)updateViewComponents;
- (void)updateViewState;
- (void)update;
- (void)prepareForUpdate;
- (void)baseBranchHeaderViewController:(id)arg1 didSelectBaseBranchRef:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)selectionDidChange;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionActuallyChanged;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)groupCellView;
- (id)commitCellView;
- (id)loadingCellView;
- (id)emptyCellView;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)workspaceDidChangeAccessibilityDisplayOptions:(id)arg1;
- (void)gpgDefaultBinaryDidUpdate:(id)arg1;
- (void)historyItemControllerDidCountCommits:(id)arg1;
- (void)historyItemControllerDidChangeItems:(id)arg1;
- (void)historyItemController:(id)arg1 didUpdateItemsAtIndexes:(id)arg2;
- (void)historyItemController:(id)arg1 didMoveItemAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)historyItemController:(id)arg1 didInsertItemsAtIndexes:(id)arg2;
- (void)historyItemController:(id)arg1 didDeleteItemsAtIndexes:(id)arg2;
- (void)historyItemControllerWillChangeItems:(id)arg1;
- (void)historyItemControllerDidReloadItems:(id)arg1;
- (void)repositoryDidFinishCheckout:(id)arg1;
- (void)repositoryDidFinishMerge:(id)arg1;
- (void)repositoryDidFinishCommit:(id)arg1;
- (void)repositoryDidUpdateTags:(id)arg1;
- (void)repositoryDidUpdateRemotes:(id)arg1;
- (void)repositoryDidUpdateBranches:(id)arg1;
- (void)windowDidChangeFirstResponder;
- (void)filterContainerViewControllerDidUpdate;
@property(readonly, nonatomic) NSView *searchControllerKeyView;
- (void)searchControllerDidEndSearching;
- (void)searchControllerDidUpdate;
- (void)userDefaultsDidChangeKey:(id)arg1 change:(id)arg2;
- (void)registerTableCellNibs;
- (void)historyViewSettingsDidChange:(id)arg1;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (void)unregisterHistoryViewSettingsObserver;
- (void)registerHistoryViewSettingsObserver;
- (void)unregisterWindowObserver;
- (void)registerWindowObserver;
- (void)unregisterUserDefaultsObserver;
- (void)unregisterTitleBarVisibilityObserver;
- (void)registerTitleBarVisibilityObserver;
- (void)registerUserDefaultsObserver;
- (void)unregisterGPGBinaryObserver;
- (void)registerGPGBinaryObserver;
- (void)unregisterWorkspaceObserver;
- (void)registerWorkspaceObserver;
- (void)unregisterObservers;
- (void)registerObservers;
- (void)unconfigureTableView;
- (void)configureTableView;
- (void)unconfigureHistoryMenuGenerator;
- (void)configureHistoryMenuGenerator;
- (void)unconfigureHistoryItemController;
- (void)configureHistoryItemController;
- (BOOL)shouldResign;
- (id)commitsForIndexes:(id)arg1;
- (id)selectedObjects;
- (id)affectedItems;
- (id)affectedObjects;
- (id)itemsForRowIndexes:(id)arg1;
- (id)itemForRow:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

