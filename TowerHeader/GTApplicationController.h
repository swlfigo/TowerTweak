//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSResponder.h>

#import "GTApplicationStatusObserving-Protocol.h"
#import "GTGPGBinaryObserving-Protocol.h"
#import "GTGitRepositoryFinderPathsObserving-Protocol.h"
#import "GTUserDefaultsKeyObserving-Protocol.h"

@class GTApplicationInitializer, GTApplicationStatus, GTApplicationStatusObserver, GTBookmarksController, GTGPGBinaryController, GTGPGBinaryObserver, GTGitCloneController, GTGitGlobalConfigController, GTGitRepositoryCacheController, GTGitRepositoryFinder, GTGitRepositoryFinderPathsObserver, GTGitRepositoryManager, GTMainWindowControllerManager, GTProductController, GTProductStatusController, GTUserDefaultsKeyObserver, NSMutableDictionary, NSString;

@interface GTApplicationController : NSResponder <GTApplicationStatusObserving, GTGPGBinaryObserving, GTGitRepositoryFinderPathsObserving, GTUserDefaultsKeyObserving>
{
    BOOL _restoringWindowState;
    BOOL _updatingBeta;
    BOOL _updatingProductLicense;
    GTApplicationInitializer *_applicationInitializer;
    GTProductController *_productController;
    GTApplicationStatusObserver *_applicationStatusObserver;
    GTApplicationStatus *_applicationStatus;
    GTProductStatusController *_productStatusController;
    NSMutableDictionary *_registrationWindowControllers;
    GTMainWindowControllerManager *_mainWindowControllerManager;
    GTBookmarksController *_bookmarkController;
    GTGitRepositoryFinder *_repositoryFinder;
    GTGitRepositoryCacheController *_repositoryCacheController;
    GTGitCloneController *_cloneController;
    GTGitRepositoryManager *_repositoryManager;
    GTGPGBinaryController *_gpgBinaryController;
    GTGPGBinaryObserver *_gpgBinaryObserver;
    GTGitRepositoryFinderPathsObserver *_repositoryFinderIgnoredFilePathsObserver;
    GTUserDefaultsKeyObserver *_userDefaultsObserver;
}

+ (id)sharedController;
- (void).cxx_destruct;
@property(nonatomic, getter=isUpdatingProductLicense) BOOL updatingProductLicense; // @synthesize updatingProductLicense=_updatingProductLicense;
@property(nonatomic, getter=isUpdatingBeta) BOOL updatingBeta; // @synthesize updatingBeta=_updatingBeta;
@property(retain, nonatomic) GTUserDefaultsKeyObserver *userDefaultsObserver; // @synthesize userDefaultsObserver=_userDefaultsObserver;
@property(retain, nonatomic) GTGitRepositoryFinderPathsObserver *repositoryFinderIgnoredFilePathsObserver; // @synthesize repositoryFinderIgnoredFilePathsObserver=_repositoryFinderIgnoredFilePathsObserver;
@property(retain, nonatomic) GTGPGBinaryObserver *gpgBinaryObserver; // @synthesize gpgBinaryObserver=_gpgBinaryObserver;
@property(retain, nonatomic) GTGPGBinaryController *gpgBinaryController; // @synthesize gpgBinaryController=_gpgBinaryController;
@property(retain, nonatomic) GTGitRepositoryManager *repositoryManager; // @synthesize repositoryManager=_repositoryManager;
@property(retain, nonatomic) GTGitCloneController *cloneController; // @synthesize cloneController=_cloneController;
@property(retain, nonatomic) GTGitRepositoryCacheController *repositoryCacheController; // @synthesize repositoryCacheController=_repositoryCacheController;
@property(retain, nonatomic) GTGitRepositoryFinder *repositoryFinder; // @synthesize repositoryFinder=_repositoryFinder;
@property(retain, nonatomic) GTBookmarksController *bookmarkController; // @synthesize bookmarkController=_bookmarkController;
@property(nonatomic) __weak GTMainWindowControllerManager *mainWindowControllerManager; // @synthesize mainWindowControllerManager=_mainWindowControllerManager;
@property(retain, nonatomic) NSMutableDictionary *registrationWindowControllers; // @synthesize registrationWindowControllers=_registrationWindowControllers;
@property(retain, nonatomic) GTProductStatusController *productStatusController; // @synthesize productStatusController=_productStatusController;
@property(retain, nonatomic) GTApplicationStatus *applicationStatus; // @synthesize applicationStatus=_applicationStatus;
@property(retain, nonatomic) GTApplicationStatusObserver *applicationStatusObserver; // @synthesize applicationStatusObserver=_applicationStatusObserver;
@property(nonatomic) __weak GTProductController *productController; // @synthesize productController=_productController;
@property(retain, nonatomic) GTApplicationInitializer *applicationInitializer; // @synthesize applicationInitializer=_applicationInitializer;
@property(nonatomic, getter=isRestoringWindowState) BOOL restoringWindowState; // @synthesize restoringWindowState=_restoringWindowState;
- (void)userDefaultsDidChangeKey:(id)arg1 change:(id)arg2;
- (void)repositoryFinderPathsDidUpdate:(id)arg1;
- (void)gpgDefaultBinaryDidUpdate:(id)arg1;
- (void)closeAllRegistrationWindows;
- (void)closeAllWindows;
- (void)handleProductStatusUpdateInProductionMode;
- (void)handleProductStatusUpdateInBetaMode;
- (void)applicationStatusDidChange:(id)arg1;
- (void)updateGlobalConfigData;
- (void)updateCommandLineToolVersionInfo;
- (void)updateApplicationVersionInfo;
- (void)updateLastVersionInfo:(id)arg1;
- (void)showUpdatesPreferences:(id)arg1;
- (void)showGitPreferences:(id)arg1;
- (void)showGeneralPreferences:(id)arg1;
- (void)showPreferences:(id)arg1;
- (void)showNewsletterSubscriptionScreen:(id)arg1;
- (void)openLicenseActivateWindow:(id)arg1;
- (void)openLicenseInvalidWindow:(id)arg1;
- (void)openTrialExpiredWindow:(id)arg1;
- (void)openWelcomeRegistrationWindow:(id)arg1;
- (void)openTrialRegistrationWindow:(id)arg1;
- (void)openBetaClosedWindow:(id)arg1;
- (void)openBetaRegistrationWindow:(id)arg1;
- (void)openLicenseActivationWindowWithLicenseName:(id)arg1 licenseCode:(id)arg2;
- (void)openLicenseActivatedWindow:(id)arg1;
- (void)activateProductWithLicenseCode:(id)arg1 licenseName:(id)arg2;
- (void)openRegistrationWindowAction:(id)arg1;
- (void)openLicenseBadge:(id)arg1;
- (void)openTrialBadge:(id)arg1;
- (void)openBetaBadge:(id)arg1;
- (void)openGettingStartedWindowAction:(id)arg1;
- (void)showAboutPanel:(id)arg1;
- (void)openRepositoryInNewWindow:(id)arg1;
- (void)openRepository:(id)arg1;
- (void)openGitRepositoryURL:(id)arg1;
- (BOOL)openFileURLs:(id)arg1;
- (BOOL)openFiles:(id)arg1;
- (BOOL)openFile:(id)arg1;
- (void)openQuickly:(id)arg1;
- (void)open:(id)arg1;
- (void)showActivityWindow:(id)arg1;
- (void)openInitialWindowIfNeeded:(id)arg1;
- (void)openNewWindow:(id)arg1;
- (BOOL)terminate:(id *)arg1;
- (void)launch;
- (BOOL)canOpenRepositoryAtURL:(id)arg1;
- (BOOL)hasCompletedGettingStarted;
@property(readonly, nonatomic) BOOL hasValidProductStatus;
@property(readonly, nonatomic) BOOL canOpenWindows;
- (id)sparkleUpdater;
@property(readonly, nonatomic) GTGitGlobalConfigController *globalConfigController;
- (void)initialize;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

