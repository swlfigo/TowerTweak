//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

@class NSArray, NSDictionary, NSOrderedSet, NSString;

@interface GTGitRef : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingShortCommitHash;
+ (id)forkDataRefNameForPullRequest:(id)arg1;
+ (BOOL)isValidRefName:(id)arg1;
+ (id)fullRefNameFromRefName:(id)arg1 refType:(short)arg2;
+ (id)refNameFromFullRefName:(id)arg1 refType:(short)arg2;
+ (id)refNameFromFullRefName:(id)arg1;
+ (short)refTypeFromFullRefName:(id)arg1;
+ (unsigned long long)gitRefTypeFromType:(short)arg1;
+ (short)refTypeFromGitRefType:(unsigned long long)arg1;
+ (id)developmentBranchRefNames;
- (void)updateRefName;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (void)removeAllTrackingRefs;
- (void)removeAllTrackedRefs;
- (BOOL)isTrackedByRef:(id)arg1;
- (BOOL)isTrackingRef:(id)arg1;
@property(readonly, nonatomic) GTGitRef *trackedRef;
@property(readonly, nonatomic) NSArray *allTrackingRefs;
@property(readonly, nonatomic) NSArray *allTrackedRefs;
@property(readonly, nonatomic, getter=isStashRefType) BOOL stashRefType;
@property(readonly, nonatomic, getter=isTagRefType) BOOL tagRefType;
@property(readonly, nonatomic, getter=isRemoteBranchRefType) BOOL remoteBranchRefType;
@property(readonly, nonatomic, getter=isBranchRefType) BOOL branchRefType;
@property(retain, nonatomic) NSString *fullRefName; // @dynamic fullRefName;
@property(readonly, nonatomic) NSString *shortRevision;
@property(readonly, nonatomic) NSString *revision;
@property(readonly, nonatomic) NSString *shortCommitHash;
- (id)initWithRefType:(short)arg1 fullRefName:(id)arg2 managedObjectContext:(id)arg3;
- (void)removeTrackingRefs:(id)arg1;
- (void)addTrackingRefs:(id)arg1;
- (void)removeTrackingRefsObject:(id)arg1;
- (void)addTrackingRefsObject:(id)arg1;
- (void)replaceTrackingRefsAtIndexes:(id)arg1 withTrackingRefs:(id)arg2;
- (void)replaceObjectInTrackingRefsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeTrackingRefsAtIndexes:(id)arg1;
- (void)insertTrackingRefs:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromTrackingRefsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inTrackingRefsAtIndex:(unsigned long long)arg2;
- (void)removeTrackedRefs:(id)arg1;
- (void)addTrackedRefs:(id)arg1;
- (void)removeTrackedRefsObject:(id)arg1;
- (void)addTrackedRefsObject:(id)arg1;
- (void)replaceTrackedRefsAtIndexes:(id)arg1 withTrackedRefs:(id)arg2;
- (void)replaceObjectInTrackedRefsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeTrackedRefsAtIndexes:(id)arg1;
- (void)insertTrackedRefs:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromTrackedRefsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inTrackedRefsAtIndex:(unsigned long long)arg2;
- (id)displayName;

// Remaining properties
@property(retain, nonatomic) NSString *commitHash; // @dynamic commitHash;
@property(readonly, nonatomic) NSString *refName; // @dynamic refName;
@property(retain, nonatomic) NSOrderedSet *trackedRefs; // @dynamic trackedRefs;
@property(retain, nonatomic) NSOrderedSet *trackingRefs; // @dynamic trackingRefs;
@property(nonatomic) short type; // @dynamic type;

@end

