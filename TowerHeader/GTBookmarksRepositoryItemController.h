//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GTBackgroundSession, GTBookmark, GTGitUserProfile, GTStateManager, NSArray;
@protocol GTBookmarksRepositoryItemControllerDelegate, GTRepositoryUIActions;

@interface GTBookmarksRepositoryItemController : NSObject
{
    GTBookmark *_bookmark;
    NSArray *_items;
    id <GTRepositoryUIActions> _target;
    id <GTBookmarksRepositoryItemControllerDelegate> _delegate;
    GTStateManager *_stateManager;
    GTBackgroundSession *_backgroundSession;
    NSArray *_userProfiles;
    GTGitUserProfile *_repositoryUserProfile;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GTGitUserProfile *repositoryUserProfile; // @synthesize repositoryUserProfile=_repositoryUserProfile;
@property(retain, nonatomic) NSArray *userProfiles; // @synthesize userProfiles=_userProfiles;
@property(retain, nonatomic) GTBackgroundSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property(retain, nonatomic) GTStateManager *stateManager; // @synthesize stateManager=_stateManager;
@property(nonatomic) __weak id <GTBookmarksRepositoryItemControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <GTRepositoryUIActions> target; // @synthesize target=_target;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) GTBookmark *bookmark; // @synthesize bookmark=_bookmark;
- (id)makeRemoteItemsForRepository:(id)arg1;
- (id)makeRemotesGroupItem;
- (id)makeStatusItemForRepository:(id)arg1;
- (id)makeCurrentBranchItemForRepository:(id)arg1;
- (id)makeWorkingCopyGroupItem;
- (id)makeRepositoryFileURLItemForRepository:(id)arg1;
- (id)makeGitUserItemForUser:(id)arg1;
- (id)makeDescriptionItemForRepository:(id)arg1;
- (id)makeLastUpdatedItemForRepository:(id)arg1;
- (id)makeLastOpenedItemForRepository:(id)arg1;
- (id)makeGeneralGroupItem;
- (id)makeInvalidRepositoryItemForRepository:(id)arg1;
- (id)makeSettingsItems;
- (void)updateStateForAsynchronouslyLoadedItems;
- (id)userProfilesIdentifierValue;
- (void)updateStateForSynchronouslyLoadedItems;
- (void)updateSettingsItemsIfNeeded;
- (BOOL)needsUpdateSettingsItems;
- (void)loadUserProfiles;
- (void)waitUntilLoaded;
- (void)cancel;
- (void)reload;
- (void)controllerDidFailToLoadCommitWithError:(id)arg1 backgroundTask:(id)arg2;
- (void)controllerDidLoadCommit:(id)arg1 backgroundTask:(id)arg2;
@property(readonly, nonatomic, getter=isLoading) BOOL loading;
@property(readonly, nonatomic) BOOL hasChanges;

@end

