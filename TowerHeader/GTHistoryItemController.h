//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GTBackgroundSession, GTGitHistoryManager, GTGitRepository, GTHistoryItemLoader, GTHistoryItemLoadingConfiguration, NSArray, NSError;
@protocol GTHistoryItemControllerDelegate;

@interface GTHistoryItemController : NSObject
{
    BOOL _didLoadGPGSignatures;
    GTGitRepository *_repository;
    id <GTHistoryItemControllerDelegate> _delegate;
    GTHistoryItemLoadingConfiguration *_configuration;
    unsigned long long _initialCommitLimit;
    unsigned long long _loadMoreCommitLimit;
    NSArray *_items;
    long long _totalNumberOfCommits;
    NSError *_error;
    GTGitHistoryManager *_historyManager;
    GTHistoryItemLoader *_loader;
    NSArray *_loadedItems;
    GTBackgroundSession *_backgroundSession;
}

+ (id)controllerWithRepository:(id)arg1;
+ (id)keyPathsForValuesAffectingHasAdditionalCommits;
+ (id)keyPathsForValuesAffectingLoading;
- (void).cxx_destruct;
@property(nonatomic) BOOL didLoadGPGSignatures; // @synthesize didLoadGPGSignatures=_didLoadGPGSignatures;
@property(retain, nonatomic) GTBackgroundSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property(retain, nonatomic) NSArray *loadedItems; // @synthesize loadedItems=_loadedItems;
@property(retain, nonatomic) GTHistoryItemLoader *loader; // @synthesize loader=_loader;
@property(retain, nonatomic) GTGitHistoryManager *historyManager; // @synthesize historyManager=_historyManager;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long totalNumberOfCommits; // @synthesize totalNumberOfCommits=_totalNumberOfCommits;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) unsigned long long loadMoreCommitLimit; // @synthesize loadMoreCommitLimit=_loadMoreCommitLimit;
@property(nonatomic) unsigned long long initialCommitLimit; // @synthesize initialCommitLimit=_initialCommitLimit;
@property(copy, nonatomic) GTHistoryItemLoadingConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <GTHistoryItemControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GTGitRepository *repository; // @synthesize repository=_repository;
- (void)updateGroupsIfNecessary;
- (void)controllerDidCountCommits;
- (void)controllerDidChangeItems;
- (void)controllerDidUpdateItemsAtIndexes:(id)arg1;
- (void)controllerDidMoveItemAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)controllerDidInsertItemsAtIndexes:(id)arg1;
- (void)controllerDidDeleteItemsAtIndexes:(id)arg1;
- (void)controllerWillChangeItems;
- (void)controllerDidReloadItems;
- (void)controllerDidLoadTotalNumberOfCommits:(unsigned long long)arg1 task:(id)arg2;
- (void)controllerDidFailLoadingTotalNumberOfCommitsWithError:(id)arg1 task:(id)arg2;
- (void)controllerDidLoadAdditionalItems:(id)arg1 task:(id)arg2;
- (void)controllerDidLoadItems:(id)arg1 task:(id)arg2;
- (void)controllerDidFailLoadingItemsWithError:(id)arg1 task:(id)arg2;
- (id)itemsForRevisions:(id)arg1;
- (void)waitUntilLoaded;
- (void)reset;
- (void)cancel;
- (void)loadAdditionalCommits;
- (void)countCommits;
- (void)loadCommitsWithSignatures:(BOOL)arg1;
- (void)reload;
@property(readonly, nonatomic) BOOL hasAdditionalCommits;
@property(readonly, nonatomic, getter=isLoading) BOOL loading;
- (id)initWithRepository:(id)arg1;

@end

