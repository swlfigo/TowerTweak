//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GTAbstractRepositoryViewController.h"

#import "GTNavigationComponent-Protocol.h"
#import "GTRefLogListViewControllerDelegate-Protocol.h"

@class GTBranchActionSenderValidator, GTEmptyViewController, GTGitHistoryActionSenderValidator, GTGitRef, GTHistoryCommitDetailViewController, GTRefLogListViewController, GTRefLogTouchBarController, GTWorkingCopyActionSenderValidator, NSArray, NSSplitView, NSString, NSURL, NSView;

@interface GTRefLogViewController : GTAbstractRepositoryViewController <GTRefLogListViewControllerDelegate, GTNavigationComponent>
{
    GTGitRef *_ref;
    GTRefLogListViewController *_listViewController;
    GTHistoryCommitDetailViewController *_changesetViewController;
    GTEmptyViewController *_emptySelectionViewController;
    GTRefLogTouchBarController *_touchBarController;
    NSSplitView *_splitView;
    NSView *_masterView;
    NSView *_detailView;
    NSString *_selectedRevision;
    GTWorkingCopyActionSenderValidator *_workingCopyActionsValidator;
    GTBranchActionSenderValidator *_branchActionsValidator;
    GTGitHistoryActionSenderValidator *_historyActionsValidator;
    NSArray *_actionValidators;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *actionValidators; // @synthesize actionValidators=_actionValidators;
@property(retain, nonatomic) GTGitHistoryActionSenderValidator *historyActionsValidator; // @synthesize historyActionsValidator=_historyActionsValidator;
@property(retain, nonatomic) GTBranchActionSenderValidator *branchActionsValidator; // @synthesize branchActionsValidator=_branchActionsValidator;
@property(retain, nonatomic) GTWorkingCopyActionSenderValidator *workingCopyActionsValidator; // @synthesize workingCopyActionsValidator=_workingCopyActionsValidator;
@property(retain, nonatomic) NSString *selectedRevision; // @synthesize selectedRevision=_selectedRevision;
@property(retain, nonatomic) NSView *detailView; // @synthesize detailView=_detailView;
@property(retain, nonatomic) NSView *masterView; // @synthesize masterView=_masterView;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) GTRefLogTouchBarController *touchBarController; // @synthesize touchBarController=_touchBarController;
@property(retain, nonatomic) GTEmptyViewController *emptySelectionViewController; // @synthesize emptySelectionViewController=_emptySelectionViewController;
@property(retain, nonatomic) GTHistoryCommitDetailViewController *changesetViewController; // @synthesize changesetViewController=_changesetViewController;
@property(retain, nonatomic) GTRefLogListViewController *listViewController; // @synthesize listViewController=_listViewController;
@property(retain, nonatomic) GTGitRef *ref; // @synthesize ref=_ref;
- (id)affectedRevisions;
- (id)revisionForSender:(id)arg1;
- (id)revisionsForSender:(id)arg1;
- (void)displayDetailView:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)repositoryDidUpdateBranches:(id)arg1;
- (id)makeTouchBar;
- (void)refLogListViewControllerDidSelectRef:(id)arg1;
- (void)refLogListViewControllerDidSelectEntry:(id)arg1;
- (void)showRefSelector:(id)arg1;
- (void)savePatch:(id)arg1;
- (void)cherryPickRevisions:(id)arg1;
- (void)resetToRevision:(id)arg1;
- (void)createNewBranchFromRevision:(id)arg1;
- (void)loadRefLog:(id)arg1;
- (void)updateChangesetView;
- (void)updateRepositoryProperties;
- (BOOL)needsUpdateChangesetView;
- (BOOL)needsUpdateRepositoryProperties;
- (void)updateViewState;
- (void)updateViewComponents;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)configureSplitView;
- (void)configure;
@property(readonly, nonatomic) NSArray *navigationPathComponents;
@property(readonly, nonatomic) NSURL *navigationURL;
@property(readonly, nonatomic) NSString *navigationIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

