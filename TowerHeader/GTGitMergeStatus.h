//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"

@class GTGitCommit, NSArray, NSString;

@interface GTGitMergeStatus : NSObject <NSCopying>
{
    BOOL _resolved;
    long long _mergeMode;
    unsigned long long _nextSequenceStep;
    unsigned long long _lastSequenceStep;
    double _mergeTimestamp;
    NSString *_mergedRevision;
    GTGitCommit *_mergedCommit;
    NSString *_nextSequenceRevision;
    NSString *_lastSequenceRevision;
    NSString *_originalRevision;
    GTGitCommit *_originalCommit;
    NSArray *_mergeConflictInfos;
    NSString *_mergeCommitMessage;
}

- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isResolved) BOOL resolved; // @synthesize resolved=_resolved;
@property(retain, nonatomic) NSString *mergeCommitMessage; // @synthesize mergeCommitMessage=_mergeCommitMessage;
@property(retain, nonatomic) NSArray *mergeConflictInfos; // @synthesize mergeConflictInfos=_mergeConflictInfos;
@property(retain, nonatomic) GTGitCommit *originalCommit; // @synthesize originalCommit=_originalCommit;
@property(retain, nonatomic) NSString *originalRevision; // @synthesize originalRevision=_originalRevision;
@property(retain, nonatomic) NSString *lastSequenceRevision; // @synthesize lastSequenceRevision=_lastSequenceRevision;
@property(retain, nonatomic) NSString *nextSequenceRevision; // @synthesize nextSequenceRevision=_nextSequenceRevision;
@property(retain, nonatomic) GTGitCommit *mergedCommit; // @synthesize mergedCommit=_mergedCommit;
@property(retain, nonatomic) NSString *mergedRevision; // @synthesize mergedRevision=_mergedRevision;
@property(nonatomic) double mergeTimestamp; // @synthesize mergeTimestamp=_mergeTimestamp;
@property(nonatomic) unsigned long long lastSequenceStep; // @synthesize lastSequenceStep=_lastSequenceStep;
@property(nonatomic) unsigned long long nextSequenceStep; // @synthesize nextSequenceStep=_nextSequenceStep;
@property(nonatomic) long long mergeMode; // @synthesize mergeMode=_mergeMode;
- (id)description;
- (void)replaceMergeConflictInfosAtIndexes:(id)arg1 withMergeConflictInfos:(id)arg2;
- (void)replaceObjectInMergeConflictInfosAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeMergeConflictInfosAtIndexes:(id)arg1;
- (void)removeObjectFromMergeConflictInfosAtIndex:(unsigned long long)arg1;
- (void)insertMergeConflictInfos:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inMergeConflictInfosAtIndex:(unsigned long long)arg2;
- (id)mergeConflictInfosAtIndexes:(id)arg1;
- (id)objectInMergeConflictInfosAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic, getter=isMergeSequence) BOOL mergeSequence;
- (unsigned long long)countOfMergeConflictInfos;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addMergeConflictInfo:(id)arg1;
- (id)mergeConflictInfoForEntry:(id)arg1;

@end

