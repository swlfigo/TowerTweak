//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GTViewController.h"

#import "GTGitCloneObserving-Protocol.h"
#import "GTNavigationComponent-Protocol.h"
#import "GTSearchControllerDelegate-Protocol.h"
#import "GTServiceAccountObserving-Protocol.h"
#import "GTServiceAccountUIActions-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"

@class GTCloneDirectoryController, GTFullSizeContentScrollView, GTGitCloneController, GTGitCloneObserver, GTSearchController, GTServiceAccount, GTServiceAccountController, GTServiceAccountObserver, GTServiceRepositoriesSearchScopeConfiguration, GTServiceRepositoryController, GTStateManager, NSArray, NSArrayController, NSString, NSTableView, NSURL, NSView;

@interface GTServicesRepositoriesViewController : GTViewController <NSTableViewDelegate, GTServiceAccountObserving, GTSearchControllerDelegate, GTGitCloneObserving, GTNavigationComponent, GTServiceAccountUIActions>
{
    GTServiceAccount *_serviceAccount;
    GTServiceAccount *_parentServiceAccount;
    GTFullSizeContentScrollView *_scrollView;
    NSTableView *_tableView;
    NSArrayController *_settingsItemsController;
    NSArray *_settingsItems;
    GTStateManager *_viewState;
    GTServiceAccountObserver *_serviceAccountObserver;
    GTServiceRepositoryController *_serviceRepositoryController;
    GTServiceAccountController *_serviceAccountController;
    GTCloneDirectoryController *_cloneDirectoryController;
    GTGitCloneController *_cloneController;
    GTSearchController *_searchController;
    GTServiceRepositoriesSearchScopeConfiguration *_searchScopeConfiguration;
    NSString *_searchPattern;
    GTGitCloneObserver *_cloneObserver;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GTGitCloneObserver *cloneObserver; // @synthesize cloneObserver=_cloneObserver;
@property(retain, nonatomic) NSString *searchPattern; // @synthesize searchPattern=_searchPattern;
@property(retain, nonatomic) GTServiceRepositoriesSearchScopeConfiguration *searchScopeConfiguration; // @synthesize searchScopeConfiguration=_searchScopeConfiguration;
@property(nonatomic) __weak GTSearchController *searchController; // @synthesize searchController=_searchController;
@property(retain, nonatomic) GTGitCloneController *cloneController; // @synthesize cloneController=_cloneController;
@property(nonatomic) __weak GTCloneDirectoryController *cloneDirectoryController; // @synthesize cloneDirectoryController=_cloneDirectoryController;
@property(retain, nonatomic) GTServiceAccountController *serviceAccountController; // @synthesize serviceAccountController=_serviceAccountController;
@property(retain, nonatomic) GTServiceRepositoryController *serviceRepositoryController; // @synthesize serviceRepositoryController=_serviceRepositoryController;
@property(retain, nonatomic) GTServiceAccountObserver *serviceAccountObserver; // @synthesize serviceAccountObserver=_serviceAccountObserver;
@property(retain, nonatomic) GTStateManager *viewState; // @synthesize viewState=_viewState;
@property(retain, nonatomic) NSArray *settingsItems; // @synthesize settingsItems=_settingsItems;
@property(retain, nonatomic) NSArrayController *settingsItemsController; // @synthesize settingsItemsController=_settingsItemsController;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak GTFullSizeContentScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) GTServiceAccount *parentServiceAccount; // @synthesize parentServiceAccount=_parentServiceAccount;
@property(retain, nonatomic) GTServiceAccount *serviceAccount; // @synthesize serviceAccount=_serviceAccount;
- (BOOL)serviceRepositoryMatchesSearchPattern:(id)arg1;
- (id)serviceRepositoryFromSender:(id)arg1;
- (void)editServiceAccount:(id)arg1;
- (void)openForkURL:(id)arg1;
- (void)createServiceRepository:(id)arg1;
- (void)openClonedRepository:(id)arg1;
- (void)quickCloneRepository:(id)arg1;
- (void)cloneRepository:(id)arg1;
- (void)reloadServiceRepositories:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (void)updateNavigationController;
- (BOOL)needsUpdateNavigationController;
- (void)updateWindowTitle;
- (BOOL)needsUpdateWindowTitle;
- (void)updateSettingsItems;
- (BOOL)needsUpdateSettingsItems;
- (void)updateServiceRepositories;
- (BOOL)needsUpdateServiceRepositories;
- (void)updateServiceRepositoryController;
- (BOOL)needsUpdateServiceRepositoryController;
- (void)updateServiceAccountObserver;
- (BOOL)needsUpdateServiceAccountObserver;
- (void)updateViewState;
- (void)updateIfNeeded;
- (void)update;
- (void)cloneDidFinish:(id)arg1;
- (void)alternateKeyUp:(id)arg1;
- (void)alternateKeyDown:(id)arg1;
@property(readonly, nonatomic) NSView *searchControllerKeyView;
- (void)searchControllerDidEndSearching;
- (void)searchControllerDidUpdate;
- (void)serviceRepositoriesDidUpdate:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (id)makeServiceRepositoryItemForServiceRepository:(id)arg1;
- (id)makeEmptyRepositoriesItem;
- (id)makeServiceRepositoryItemsForServiceAccount:(id)arg1 parentServiceAccount:(id)arg2;
- (id)makeGroupItem:(BOOL)arg1;
- (id)makeOfflineErrorItemForServiceAccount:(id)arg1;
- (id)makeAuthenticationErrorItemForServiceAccount:(id)arg1;
- (id)makeSettingsItems;
@property(readonly, nonatomic) NSArray *navigationPathComponents;
@property(readonly, nonatomic) NSURL *navigationURL;
@property(readonly, nonatomic) NSString *navigationIdentifier;
- (void)configureTableView;
- (void)configureScrollView;
- (BOOL)needsUpdate;
- (void)dealloc;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

